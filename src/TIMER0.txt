noInterrupt(); 

  TCCR0A = 0;// set entire TCCR0A register to 0
  TCCR0B = 0;// same for TCCR0B
  TCNT0  = 0;//initialize counter value to 0
  // set compare match register for 2khz increments
  OCR0A = 124;// = (16*10^6) / (2000*64) - 1 (must be <256)
  // turn on CTC mode
  TCCR0A |= (1 << WGM01);
  // Set CS01 and CS00 bits for 64 prescaler
  TCCR0B |= (1 << CS01) | (1 << CS00);   
/*****************************************\
  // prescaler a 1024 dovrebbe essere cosÃ¬. 
	TCCR1B |= (1<<CS12)|(1<<CS10); O QUESTO TCCR1B = (1<<CS12)|(1<<CS10);
/*****************************************\
  // enable timer compare interrupt
  TIMSK0 |= (1 << OCIE0A);



ISR(TIMER0_COMPA_vect){
	//interrupt handler
}


TCCR0A, TCCR0B = gestiscono funzionamento dei time e del prescaler.
TCNT0 = registro di conteggio. 
OCR0A = viene comparato con i registri di conteggio per generare interruzioni
TIMSK0 = si specificano le istruzioni per generazione dell'interruzione.



https://maker.pro/arduino/projects/timer-interrupts-improve-your-arduino-programming-skills